@using Money_Talks.Models
@model IEnumerable<Money_Talks.Models.TransactionModel>

@{
    ViewBag.Title = "Money Talks";
}

<link href="../../graphics/styles3.css" rel="stylesheet" type="text/css">

<script type="text/javascript">
    //Hide a named menu
    function hide_menu(named)
    {
        //get the named menu
        var menuElement = document.getElementById(named);
        //hide it with a style attribute
        menuElement.style.display = "none";
    }

    function change_Chart(display, hide1, hide2, hide3) {
        //get the named menu
        var displayElement = document.getElementById(display);
        var hideElement1 = document.getElementById(hide1);
        var hideElement2 = document.getElementById(hide2);
        var hideElement3 = document.getElementById(hide3);

        displayElement.style.display = "inline";
        //hide it with a style attribute
        hideElement1.style.display = "none";
        hideElement2.style.display = "none";
        hideElement3.style.display = "none";
    }
</script>
@if (ViewBag.rules != null)
{
    <div class="popup" id="menu1">
        <!--Hide the menu when the text (Close popup) is clicked-->
        <span onclick="hide_menu('menu1');" id="close">x</span>
        <div id="popupContainer">
            <div  id="popupMsg">
                @foreach (var r in ViewBag.rules)
                {
                    @*<strong>&middot;&emsp;</strong>*@
                    @r<br/>
                }
            </div>
        </div>
    </div>
}
<p>
    @Html.ActionLink("Test", "Pop")
</p>

<span onclick="change_Chart('pieChart', 'areaChart', 'columnChart', 'barChart');" style="cursor: pointer">Pie</span>
<span onclick="change_Chart('areaChart', 'pieChart', 'columnChart', 'barChart');" style="cursor: pointer">Area</span>
<span onclick="change_Chart('columnChart', 'pieChart', 'areaChart', 'barChart');" style="cursor: pointer">Column</span>
<span onclick="change_Chart('barChart', 'pieChart', 'areaChart', 'columnChart');" style="cursor: pointer">Bar</span>

<img id="pieChart" src="@Url.Action("GetRainfallChart", new { type = "pie" })" alt="SimpleChart" style="border: 1px solid black; float: right"  />
<img id="areaChart" src="@Url.Action("GetRainfallChart", new{ type = "area"})" alt="SimpleChart" style="border: 1px solid black; float: right; display: none"  />
<img id="columnChart" src="@Url.Action("GetRainfallChart", new{type = "column"})" alt="SimpleChart" style="border: 1px solid black; float: right; display: none"  />
<img id="barChart" src="@Url.Action("GetRainfallChart", new{type = "bar"})" alt="SimpleChart" style="border: 1px solid black; float: right; display: none"  />

<p>
    <font size="3" face="arial" color="green">
        Current Balance: @ViewBag.balance
    </font>
    
    @{
        if (ViewBag.balance == 0)
        {
            <br/> <br/>
            <font size="4" face="arial" color="green">
                Your balance is stable
            </font>
        }
        else if (ViewBag.balance < 0)
        {
            <br/> <br/>
            <font size="4" face="arial" color="red">
                Your balance is below zero
            </font>
        }          
    }
</p>

<p>@Html.ActionLink("Create New Transaction", "Create")<br/><br/></p>

<p>
    <font size="3" face="arial">
        Recent Transactions:
    </font>
</p>

@* Allows to submit a date range for the transactions *@
@using (Html.BeginForm())
{
    <input type="date" placeholder="Start Date" name="startDate" />
    <input type="date" placeholder="End Date" name="endDate"  />
    
    <input type="submit" name="submit" value="Submit" />                          
}

<table>
    <tr>
        <th>
            Amount
        </th>
        <th>
            Transaction Type
        </th>
        <th>
            Date Created
        </th>
        <th>
            Category
        </th>
    </tr>

    @foreach (var transaction in Model.Reverse())
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => transaction.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => transaction.TransactionType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => transaction.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => transaction.Category)
            </td>
        
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = transaction.TransactionId }) |
                @Html.ActionLink("Details", "Details", new { id = transaction.TransactionId }) |
                @Html.ActionLink("Delete", "Delete", new { id = transaction.TransactionId })
            </td>
        </tr>
    }
</table>

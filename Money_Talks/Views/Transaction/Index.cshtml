@using Money_Talks.Models
@model IEnumerable<Money_Talks.Models.TransactionModel>

@{
    ViewBag.Title = "Money Talks";
}


<p>
    @Html.ActionLink("Test", "Pop")
</p>
<p>
    <font size="3" face="arial" color="green">
        Current Balance: @ViewBag.balance
    </font>
    
    @{
        if (ViewBag.balance == 0)
        {
            <br/> <br/>
            <font size="4" face="arial" color="green">
                Your balance is stable
            </font>
        }
        else if (ViewBag.balance < 0)
        {
            <br/> <br/>
            <font size="4" face="arial" color="red">
                Your balance is below zero
            </font>
        }          
    }
</p>

<p>@Html.ActionLink("Create New Transaction", "Create")<br/><br/></p>

<p>
    <font size="3" face="arial">
        Recent Transactions:
    </font>
</p>

<table>
    <tr>
        <th>
            Amount
        </th>
        <th>
            Transaction Type
        </th>
        <th>
            Date Created
        </th>
        <th>
            Category
        </th>
    </tr>

@foreach (var item in Model.Reverse())
{
    if (User.Identity.Name.Equals(item.Username))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TransactionType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
        
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.TransactionId}) |
                @Html.ActionLink("Details", "Details", new {id = item.TransactionId}) |
                @Html.ActionLink("Delete", "Delete", new {id = item.TransactionId})
            </td>
        </tr>
    }
}

</table>
